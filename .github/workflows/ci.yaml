name: Tests and Linting

on:
  pull_request:
  push:
    branches:
      - main
concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      SETUPTOOLS_USE_DISTUTILS: stdlib
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install base libraries
        run: pip install nodeenv cython setuptools pip  --upgrade --quiet --user

      - uses: pre-commit/action@v3.0.1

  test:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11","3.12"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create cache file
        run: echo '${{ matrix.python-version }}' > ./matrix-file.txt

      - uses: pdm-project/setup-pdm@v4
        name: Set up PDM
        with:
          python-version: ${{ matrix.python-version }}
          allow-python-prereleases: false
          cache: true
          cache-dependency-path: |
            ./pdm.lock
            ./matrix-file.txt

      - name: Install base libraries
        run: pip install nodeenv cython setuptools pip --upgrade --quiet --user

      - name: Install dependencies
        run: pdm install -G:all

      - name: Test with Coverage
        run: pdm run pytest tests --cov=app --cov-report=xml

      - if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  build-docs:
    needs:
      - validate
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: pdm-project/setup-pdm@v4
        name: Set up PDM
        with:
          python-version: "3.11"
          allow-python-prereleases: false
          cache: true

      - name: Install dependencies
        run: pdm install -G:all

      - name: Build docs
        run: pdm run make docs

      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: echo $PR_NUMBER > .pr_number

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-preview
          path: |
            docs/_build/html
            .pr_number

  codeql:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install base libraries
        run: pip install nodeenv cython setuptools pip --upgrade --quiet --user
      - uses: pdm-project/setup-pdm@v4
        name: Set up PDM
        with:
          python-version: "3.11"
          cache: true
      - name: Install dependencies
        run: pdm install -G:all
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
